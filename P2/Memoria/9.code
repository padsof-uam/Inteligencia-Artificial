;;    Devuelve el camino a recorrer para llegar desde un nodo origen. En la lista devuelta, el primer elemento es el destino, y el último el origen.
;;    a un estado meta (por defecto también del problema *galaxy-m35*)
;; 
;;    IN:node: nodo del que iniciar la búsqueda
;;    OUT: Una lista de los nombres de los planetas que forman el camino
;;
;;    pseudocode:
;;    Utilizando una función auxiliar de la forma:
;;    aux_fun (nodo acumulador)
;;        si (nodo no es nulo)
;;            añadir el nodo al acumulador
;;            aux_fun(padre(nodo) acumulador)
;;        sino
;;            devolver acumulador.
;;

(defun get-states (node acc)
    (if (null node)
        acc
        (get-states (node-parent node) (append acc (list (node-state node))))))

(defun tree-path (node)
    (get-states node '()))

;; Examples 

(setf *node-end* (a-star-search *galaxy-M35*))
(tree-path *node-end*)

;;(SIRTIS DAVION KATRIL KENTARES AVALON)

;; end



