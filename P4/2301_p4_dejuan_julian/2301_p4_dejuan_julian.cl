(setq *rule-list*
	'(
	(R1 (pertenece ?E (?E . ?_)))
	(R2 (pertenece ?E (?_ . ?Xs)) :- ((pertenece ?E ?Xs)))
	(R3 (encolar () ?E  (?E)))
	(R4 (encolar (?Y . ?L) ?E (?Y . ?Z)) :- ((encolar ?L ?E ?Z)))
	(R7 (concatenar () ?L ?L))
	(R8 (concatenar (?X . ?R) ?L (?X . ?R2)) :- ((concatenar ?R ?L ?R2)))
	(R9 (invertir () ()))
	(R10 (invertir (?X . ?Y) ?Z) :- ((invertir ?Y ?H) (encolar ?H ?X ?Z)))
	(R11 (ordenada ()))
	(R12 (ordenada (?_)))
	(R13 (ordenada (?x ?y . ?zs)) :- ((?= T (?eval (<= ?x ?y))) (ordenada (?y . ?zs))))
	(R14 (productorio () 1))
	(R15 (productorio (?X . ?R) ?Z) :- ((productorio ?R ?P) (?= ?Z (?eval (* ?P ?X)))))
	(R16 (posicionN 1 (?X . ?_) ?X))
	(R17 (posicionN ?X (?_ . ?L) ?R) :- ((?= T (?eval (> ?X 1))) (?= ?P (?eval (- ?X 1))) (posicionN ?P ?L ?R)))
	(R18 (doblar ?X ?R) :- ((?= ?R (?eval (* ?X 2)))))
	(R19 (map ?_ () ()))
	(R20 (map ?Pred (?First . ?Rest) ?Retval) :- (
				 (?Pred ?First ?FirstRes)
				 (concatenar (?FirstRes) ?Recur ?Retval)
				 (map ?Pred ?Rest ?Recur)
				 ))
	(R21 (neutro + 0))
	(R22 (neutro * 1))
	(R23 (+ ?A ?B (?eval (+ ?A ?B))))
	(R24 (* ?A ?B (?eval (* ?A ?B))))
	(R25 (reduce ?Pred () ?R) :- ((neutro ?Pred ?R)))
	(R26 (reduce ?Pred (?First . ?Rest) ?Retval) :- (
		(reduce ?Pred ?Rest ?Partial)
		(?Pred ?First ?Partial ?Retval)
		))

))

